using System;
using cpModel.Dtos.Report;
using DevExpress.XtraReports.UI;

namespace cpReportDefinitions.FieldRep
{
    public partial class rptInstruction
    {
        public override string BaseReportName { get; set; } = "Instruction Report";
        public rptInstruction()
        {
            InitializeComponent();
            reDescription.BeforePrint += ReDescription_BeforePrint;
            reCloseout.BeforePrint += ReCloseout_BeforePrint; ;
            PageHeader.BeforePrint += PageHeader_BeforePrint;
            sbCloseout.BeforePrint += SbCloseout_BeforePrint;
        }


        private void SbCloseout_BeforePrint(object sender, System.Drawing.Printing.PrintEventArgs e)
        {
            XtraReportBase r = (sender as Band).Report;
            InstructionReportDto i = (InstructionReportDto)r?.GetCurrentRow();
            if (i.ClosedOutDate == null) e.Cancel = true;
        }

        private void PageHeader_BeforePrint(object sender, System.Drawing.Printing.PrintEventArgs e)
        {
            var _currInc = GetCurrentRow() as InstructionReportDto;
            if (_currInc!=null) RecordReference = "Instruction: " + _currInc.InstructionNo;
        }

        private void ReDescription_BeforePrint(object sender, System.Drawing.Printing.PrintEventArgs e)
        {
            XtraReportBase logReport = (sender as XRRichText).Report;
            reDescription.Html = GetHtmlWithDefaultFormat(logReport, "DescriptionHtml", reDescription.Font);
        }
        private void ReCloseout_BeforePrint(object sender, System.Drawing.Printing.PrintEventArgs e)
        {
            XtraReportBase logReport = (sender as XRRichText).Band.Report;
            reCloseout.Html = GetHtmlWithDefaultFormat(logReport, "CloseOutComments", reCloseout.Font);
        }
    }
}
