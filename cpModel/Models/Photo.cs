// <auto-generated>
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using cpModel.Interfaces;
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Threading;
using System.Threading.Tasks;

namespace cpModel.Models
{
    public partial class Photo: ITrackableEntity, IReplicableEntity, ILockableEntity
    {
        public Guid? UniqueId { get; set; }
        public string HrId { get; set; }
        public int? CreatedBy { get; set; }
        public DateTime? CreatedOn { get; set; }
        public int? ModifiedBy { get; set; }
        public DateTime? ModifiedOn { get; set; }
        public bool? IsSoftDeleted { get; set; }
        public int PhotoId { get; set; }
        public int? PhotoNo { get; set; }
        public int? SiteDiaryId { get; set; }
        public string Description { get; set; }
        public string PhotoPath { get; set; }
        public DateTime? PhotoDate { get; set; }
        public int? ProjectId { get; set; }
        public string PhotoSource { get; set; }
        public bool? IsPromo { get; set; }

        [ConcurrencyCheck]
        public int? OptimisticLockField { get; set; }

        // Reverse navigation
        public virtual ICollection<CnPhoto> CnPhotos { get; set; }
        public virtual ICollection<PhotoApproval> PhotoApprovals { get; set; }
        public virtual ICollection<PhotoChecklistItem> PhotoChecklistItems { get; set; }
        public virtual ICollection<PhotoIncident> PhotoIncidents { get; set; }
        public virtual ICollection<PhotoLot> PhotoLots { get; set; }
        public virtual ICollection<PhotoNcr> PhotoNcrs { get; set; }
        public virtual ICollection<PhotoPunchListItem> PhotoPunchListItems { get; set; }
        public virtual ICollection<PhotoVariation> PhotoVariations { get; set; }

        public virtual Project Project { get; set; }
        public virtual SiteDiary SiteDiary { get; set; }

        public Photo()
        {
            CnPhotos = new HashSet<CnPhoto>();
            PhotoApprovals = new HashSet<PhotoApproval>();
            PhotoChecklistItems = new HashSet<PhotoChecklistItem>();
            PhotoIncidents = new HashSet<PhotoIncident>();
            PhotoLots = new HashSet<PhotoLot>();
            PhotoNcrs = new HashSet<PhotoNcr>();
            PhotoPunchListItems = new HashSet<PhotoPunchListItem>();
            PhotoVariations = new HashSet<PhotoVariation>();
            InitializePartial();
        }

        partial void InitializePartial();
    }

}
// </auto-generated>

