// <auto-generated>
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using cpModel.Interfaces;
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Threading;
using System.Threading.Tasks;

namespace cpModel.Models
{
    public partial class Workflow: ITrackableEntity, IReplicableEntity, ILockableEntity
    {
        public Guid? UniqueId { get; set; }
        public string HrId { get; set; }
        public int? CreatedBy { get; set; }
        public DateTime? CreatedOn { get; set; }
        public int? ModifiedBy { get; set; }
        public DateTime? ModifiedOn { get; set; }
        public bool? IsSoftDeleted { get; set; }
        public int WorkflowId { get; set; }
        public int? ProjectId { get; set; }
        public string Description { get; set; }
        public int? OriginId { get; set; }
        public int? LastStepId { get; set; }
        public string StatusLastStep { get; set; }
        public DateTime? DateLastStep { get; set; }
        public DateTime? ActionDate { get; set; }
        public bool? IsLatestStepAlert { get; set; }
        public bool? IsCompleted { get; set; }
        public string LastActionByName { get; set; }
        public int? LastActionById { get; set; }
        public string LastActionComment { get; set; }
        public bool? HasApprovalStep { get; set; }

        [ConcurrencyCheck]
        public int? OptimisticLockField { get; set; }

        // Reverse navigation
        public virtual ICollection<Approval> Approvals { get; set; }
        public virtual ICollection<ApprovalWorkflow> ApprovalWorkflows { get; set; }
        public virtual ICollection<WorkflowAction> WorkflowActions { get; set; }
        public virtual ICollection<WorkflowLog> WorkflowLogs { get; set; }
        public virtual ICollection<WorkflowStep> WorkflowSteps { get; set; }

        public virtual Project Project { get; set; }
        public virtual User User { get; set; }

        public Workflow()
        {
            Approvals = new HashSet<Approval>();
            ApprovalWorkflows = new HashSet<ApprovalWorkflow>();
            WorkflowActions = new HashSet<WorkflowAction>();
            WorkflowLogs = new HashSet<WorkflowLog>();
            WorkflowSteps = new HashSet<WorkflowStep>();
            InitializePartial();
        }

        partial void InitializePartial();
    }

}
// </auto-generated>

