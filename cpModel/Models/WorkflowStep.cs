// <auto-generated>
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using cpModel.Interfaces;
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Threading;
using System.Threading.Tasks;

namespace cpModel.Models
{
    public partial class WorkflowStep: ITrackableEntity, IReplicableEntity, ILockableEntity
    {
        public Guid? UniqueId { get; set; }
        public string HrId { get; set; }
        public int? CreatedBy { get; set; }
        public DateTime? CreatedOn { get; set; }
        public int? ModifiedBy { get; set; }
        public DateTime? ModifiedOn { get; set; }
        public bool? IsSoftDeleted { get; set; }
        public int WorkflowStepId { get; set; }
        public int? WorkflowId { get; set; }
        public decimal? X { get; set; }
        public decimal? Y { get; set; }
        public decimal? Width { get; set; }
        public decimal? Height { get; set; }
        public string Text { get; set; }
        public bool? IsFirstStep { get; set; }
        public bool? IsLastStep { get; set; }
        public int? DaysToComplete { get; set; }
        public DateTime? DateLastCurrent { get; set; }
        public DateTime? DateLastActioned { get; set; }
        public int? OriginId { get; set; }
        public bool? IsPrivate { get; set; }
        public bool? IsAlertStep { get; set; }
        public bool? IsApprovalStep { get; set; }
        public int? Zindex { get; set; }

        [ConcurrencyCheck]
        public int? OptimisticLockField { get; set; }

        // Reverse navigation
        public virtual ICollection<WorkflowAction> ActionsFrom { get; set; }
        public virtual ICollection<WorkflowAction> ActionsTo { get; set; }
        public virtual ICollection<WorkflowLog> WorkflowLogs { get; set; }

        public virtual Workflow Workflow { get; set; }

        public WorkflowStep()
        {
            ActionsFrom = new HashSet<WorkflowAction>();
            ActionsTo = new HashSet<WorkflowAction>();
            WorkflowLogs = new HashSet<WorkflowLog>();
            InitializePartial();
        }

        partial void InitializePartial();
    }

}
// </auto-generated>

