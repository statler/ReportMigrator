// <auto-generated>
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using cpModel.Interfaces;
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Threading;
using System.Threading.Tasks;

namespace cpModel.Models
{
    public partial class LotMapLayer: ITrackableEntity, IReplicableEntity, ILockableEntity
    {
        public Guid? UniqueId { get; set; }
        public string HrId { get; set; }
        public int? CreatedBy { get; set; }
        public DateTime? CreatedOn { get; set; }
        public int? ModifiedBy { get; set; }
        public DateTime? ModifiedOn { get; set; }
        public bool? IsSoftDeleted { get; set; }
        public int LotMapLayerId { get; set; }
        public string Description { get; set; }
        public int? LotMapSectionId { get; set; }
        public int? WorkTypeId { get; set; }
        public int? CustomRegisterItemId { get; set; }
        public decimal? OrderId { get; set; }
        public int? IsAndOr { get; set; }
        public int? DisplayHeightDefault { get; set; }
        public double? ActualHeightDefault { get; set; }
        public double? DepthFromTopLayer { get; set; }
        public double? OverlapTolerance { get; set; }
        public int? OverlapBehaviour { get; set; }
        public double? LabelFontHeight { get; set; }
        public double? MaxExageration { get; set; }

        [ConcurrencyCheck]
        public int? OptimisticLockField { get; set; }

        // Reverse navigation
        public virtual ICollection<LotMapSectionBlock> LotMapSectionBlocks { get; set; }
        public virtual ICollection<LotMapSectionLot> LotMapSectionLots { get; set; }

        public virtual CustomRegisterItem CustomRegisterItem { get; set; }
        public virtual LotMapSection LotMapSection { get; set; }
        public virtual WorkType WorkType { get; set; }

        public LotMapLayer()
        {
            LotMapSectionBlocks = new HashSet<LotMapSectionBlock>();
            LotMapSectionLots = new HashSet<LotMapSectionLot>();
            InitializePartial();
        }

        partial void InitializePartial();
    }

}
// </auto-generated>

