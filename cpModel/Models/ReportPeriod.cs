// <auto-generated>
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using cpModel.Interfaces;
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Threading;
using System.Threading.Tasks;

namespace cpModel.Models
{
    public partial class ReportPeriod: ITrackableEntity, IReplicableEntity, ILockableEntity
    {
        public Guid? UniqueId { get; set; }
        public string HrId { get; set; }
        public int? CreatedBy { get; set; }
        public DateTime? CreatedOn { get; set; }
        public int? ModifiedBy { get; set; }
        public DateTime? ModifiedOn { get; set; }
        public bool? IsSoftDeleted { get; set; }
        public int ReportPeriodId { get; set; }
        public string ReportPeriodName { get; set; }
        public int? ProjectId { get; set; }
        public DateTime? ClaimDate { get; set; }
        public DateTime? PeriodEnd { get; set; }
        public bool? LockOut { get; set; }
        public bool? LockOutCost { get; set; }
        public bool? LockOutInvoice { get; set; }
        public bool? LockOutForecast { get; set; }
        public decimal? Retention { get; set; }
        public decimal? Security { get; set; }
        public decimal? PaidValue { get; set; }

        [ConcurrencyCheck]
        public int? OptimisticLockField { get; set; }

        // Reverse navigation
        public virtual ICollection<DayCost> DayCosts { get; set; }
        public virtual ICollection<ForecastVersion> ForecastVersions { get; set; }
        public virtual ICollection<ForecastVersion> PreviousForecastVersions { get; set; }
        public virtual ICollection<Invoice> Invoices { get; set; }
        public virtual ICollection<Production> Productions { get; set; }
        public virtual ICollection<ProgressClaimDetail> ProgressClaimDetails { get; set; }
        public virtual ICollection<ProgressClaimSnapshot> ProgressClaimSnapshots { get; set; }
        public virtual ICollection<ProgressClaimVersion> PreviousClaimVersions { get; set; }
        public virtual ICollection<ProgressClaimVersion> ProgressClaimVersions { get; set; }

        public virtual Project Project { get; set; }

        public ReportPeriod()
        {
            DayCosts = new HashSet<DayCost>();
            PreviousForecastVersions = new HashSet<ForecastVersion>();
            ForecastVersions = new HashSet<ForecastVersion>();
            Invoices = new HashSet<Invoice>();
            Productions = new HashSet<Production>();
            ProgressClaimDetails = new HashSet<ProgressClaimDetail>();
            ProgressClaimSnapshots = new HashSet<ProgressClaimSnapshot>();
            PreviousClaimVersions = new HashSet<ProgressClaimVersion>();
            ProgressClaimVersions = new HashSet<ProgressClaimVersion>();
            InitializePartial();
        }

        partial void InitializePartial();
    }

}
// </auto-generated>

