// <auto-generated>
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using cpModel.Interfaces;
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Threading;
using System.Threading.Tasks;

namespace cpModel.Models
{
    public partial class Subscriber: ITrackableEntity, IReplicableEntity, ILockableEntity
    {
        public Guid? UniqueId { get; set; }
        public string HrId { get; set; }
        public int? CreatedBy { get; set; }
        public DateTime? CreatedOn { get; set; }
        public int? ModifiedBy { get; set; }
        public DateTime? ModifiedOn { get; set; }
        public bool? IsSoftDeleted { get; set; }
        public int SubscriberId { get; set; }
        public string SubscriberName { get; set; }
        public string Email { get; set; }
        public string ContactPhone { get; set; }
        public string ContactName { get; set; }
        public DateTime? DateRegistered { get; set; }
        public DateTime? DateLastSubscription { get; set; }
        public DateTime? DateExpire { get; set; }
        public bool? IsActive { get; set; }
        public string UserPackType { get; set; }
        public string RenewalType { get; set; }
        public string PaymentType { get; set; }
        public string Notes { get; set; }
        public int? UserCount { get; set; }
        public int? AssocCount { get; set; }
        public string LicTamperCheck { get; set; }

        [ConcurrencyCheck]
        public int? OptimisticLockField { get; set; }

        // Reverse navigation
        public virtual ICollection<Division> Divisions { get; set; }
        public virtual ICollection<Project> Projects { get; set; }
        public virtual ICollection<Role> Roles { get; set; }
        public virtual ICollection<Supplier> Suppliers { get; set; }
        public virtual ICollection<SystemSubscriberControl> SystemSubscriberControls { get; set; }
        public virtual ICollection<Template> Templates { get; set; }
        public virtual ICollection<User> Users { get; set; }
        public virtual ICollection<UserRole> UserRoles { get; set; }

        public Subscriber()
        {
            Divisions = new HashSet<Division>();
            Projects = new HashSet<Project>();
            Roles = new HashSet<Role>();
            Suppliers = new HashSet<Supplier>();
            SystemSubscriberControls = new HashSet<SystemSubscriberControl>();
            Templates = new HashSet<Template>();
            Users = new HashSet<User>();
            UserRoles = new HashSet<UserRole>();
            InitializePartial();
        }

        partial void InitializePartial();
    }

}
// </auto-generated>

