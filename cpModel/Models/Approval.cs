// <auto-generated>
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using cpModel.Interfaces;
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Threading;
using System.Threading.Tasks;

namespace cpModel.Models
{
    public partial class Approval: ITrackableEntity, IReplicableEntity, ILockableEntity
    {
        public Guid? UniqueId { get; set; }
        public string HrId { get; set; }
        public int? CreatedBy { get; set; }
        public DateTime? CreatedOn { get; set; }
        public int? ModifiedBy { get; set; }
        public DateTime? ModifiedOn { get; set; }
        public bool? IsSoftDeleted { get; set; }
        public int ApprovalId { get; set; }
        public int? ApprovalNo { get; set; }
        public string SubjectHtml { get; set; }
        public int? RequestById { get; set; }
        public string BodyHtml { get; set; }
        public DateTime? RequiredDate { get; set; }
        public int? ResponseById { get; set; }
        public int? ProjectId { get; set; }
        public DateTime? CloseOutDate { get; set; }
        public int? CloseOutById { get; set; }
        public string CloseOutCommentHtml { get; set; }
        public int? CloseOutNcrId { get; set; }
        public int? NcrLinkId { get; set; }
        public int? LotItpDetailLinkId { get; set; }
        public int? LotQtyLink { get; set; }
        public int? LotAtpLink { get; set; }
        public int? PunchlistItemLinkId { get; set; }
        public int? PurchaseOrderLinkId { get; set; }
        public string EmailMessage { get; set; }
        public DateTime? RequestDate { get; set; }
        public DateTime? PublishDate { get; set; }
        public DateTime? EmailDate { get; set; }
        public int? ApprovalCategoryId { get; set; }
        public int? ApprovalWorkflowBaseId { get; set; }
        public int? WorkflowId { get; set; }
        public DateTime? DateDirectlyApproved { get; set; }
        public int? DirectlyApprovedById { get; set; }
        public string DirectlyApprovedCommentHtml { get; set; }
        public string StatusLastStep { get; set; }
        public DateTime? DateLastStep { get; set; }
        public DateTime? ActionDate { get; set; }
        public bool? IsLatestStepAlert { get; set; }
        public bool? IsCompleted { get; set; }
        public bool? IsApprovedToProceed { get; set; }
        public string LastActionByName { get; set; }
        public string LastActionComment { get; set; }
        public string Status { get; set; }
        public DateTime? DateLastStatus { get; set; }
        public string ApprovalNumSuffix { get; set; }
        public int? Priority { get; set; }

        [ConcurrencyCheck]
        public int? OptimisticLockField { get; set; }

        // Reverse navigation
        public virtual ICollection<ApprovalCc> ApprovalCcs { get; set; }
        public virtual ICollection<ApprovalEmail> ApprovalEmails { get; set; }
        public virtual ICollection<ApprovalItpDetail> ApprovalItpDetails { get; set; }
        public virtual ICollection<ApprovalLot> ApprovalLots { get; set; }
        public virtual ICollection<ApprovalLotItpDetail> ApprovalLotItpDetails { get; set; }
        public virtual ICollection<ApprovalLotQty> ApprovalLotQties { get; set; }
        public virtual ICollection<ApprovalNcr> ApprovalNcrs { get; set; }
        public virtual ICollection<ApprovalPunchlistItem> ApprovalPunchlistItems { get; set; }
        public virtual ICollection<ApprovalSurvey> ApprovalSurveys { get; set; }
        public virtual ICollection<ApprovalTo> ApprovalTos { get; set; }
        public virtual ICollection<CnApproval> CnApprovals { get; set; }
        public virtual ICollection<FsApproval> FsApprovals { get; set; }
        public virtual ICollection<LotItpDetail> LotItpDetails { get; set; }
        public virtual ICollection<Ncr> Ncrs { get; set; }
        public virtual ICollection<PhotoApproval> PhotoApprovals { get; set; }
        public virtual ICollection<PunchlistItem> PunchlistItems { get; set; }
        public virtual ICollection<PurchaseOrder> PurchaseOrders { get; set; }

        public virtual ApprovalCategory ApprovalCategory { get; set; }
        public virtual ApprovalWorkflow ApprovalWorkflow { get; set; }
        public virtual AtpLot AtpLot { get; set; }
        public virtual LotItpDetail LotItpDetailLink { get; set; }
        public virtual LotQuantity LotQuantity { get; set; }
        public virtual Ncr CloseOutNcr { get; set; }
        public virtual Ncr NcrLink { get; set; }
        public virtual Project Project { get; set; }
        public virtual PunchlistItem PunchlistItem { get; set; }
        public virtual PurchaseOrder PurchaseOrderLink { get; set; }
        public virtual User CloseOutBy { get; set; }
        public virtual User DirectlyApprovedBy { get; set; }
        public virtual User RequestBy { get; set; }
        public virtual User ResponseBy { get; set; }
        public virtual Workflow Workflow { get; set; }

        public Approval()
        {
            ApprovalCcs = new HashSet<ApprovalCc>();
            ApprovalEmails = new HashSet<ApprovalEmail>();
            ApprovalItpDetails = new HashSet<ApprovalItpDetail>();
            ApprovalLots = new HashSet<ApprovalLot>();
            ApprovalLotItpDetails = new HashSet<ApprovalLotItpDetail>();
            ApprovalLotQties = new HashSet<ApprovalLotQty>();
            ApprovalNcrs = new HashSet<ApprovalNcr>();
            ApprovalPunchlistItems = new HashSet<ApprovalPunchlistItem>();
            ApprovalSurveys = new HashSet<ApprovalSurvey>();
            ApprovalTos = new HashSet<ApprovalTo>();
            CnApprovals = new HashSet<CnApproval>();
            FsApprovals = new HashSet<FsApproval>();
            LotItpDetails = new HashSet<LotItpDetail>();
            Ncrs = new HashSet<Ncr>();
            PhotoApprovals = new HashSet<PhotoApproval>();
            PunchlistItems = new HashSet<PunchlistItem>();
            PurchaseOrders = new HashSet<PurchaseOrder>();
            InitializePartial();
        }

        partial void InitializePartial();
    }

}
// </auto-generated>

