// <auto-generated>
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using cpModel.Interfaces;
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Threading;
using System.Threading.Tasks;

namespace cpModel.Models
{
    public partial class Supplier: ITrackableEntity, IReplicableEntity, ILockableEntity
    {
        public Guid? UniqueId { get; set; }
        public string HrId { get; set; }
        public int? CreatedBy { get; set; }
        public DateTime? CreatedOn { get; set; }
        public int? ModifiedBy { get; set; }
        public DateTime? ModifiedOn { get; set; }
        public bool? IsSoftDeleted { get; set; }
        public int SupplierId { get; set; }
        public string SupplierName { get; set; }
        public string TradingName { get; set; }
        public string Description { get; set; }
        public string ContactName { get; set; }
        public string ContactNumber { get; set; }
        public string Address { get; set; }
        public string Email { get; set; }
        public int? ProjectId { get; set; }
        public bool? InActive { get; set; }
        public bool? NotInvoiced { get; set; }
        public string ExtReference { get; set; }
        public string SupplierAbn { get; set; }
        public int? SubscriberId { get; set; }

        [ConcurrencyCheck]
        public int? OptimisticLockField { get; set; }

        // Reverse navigation
        public virtual ICollection<DayCost> DayCosts { get; set; }
        public virtual ICollection<FsSupplier> FsSuppliers { get; set; }
        public virtual ICollection<Invoice> Invoices { get; set; }
        public virtual ICollection<PurchaseOrder> PurchaseOrders { get; set; }
        public virtual ICollection<Resource> Resources { get; set; }
        public virtual ICollection<SiteDiaryCost> SiteDiaryCosts { get; set; }
        public virtual ICollection<SupplierDivision> SupplierDivisions { get; set; }
        public virtual ICollection<SupplierLink> SupplierLinks { get; set; }

        public virtual Project Project { get; set; }
        public virtual Subscriber Subscriber { get; set; }

        public Supplier()
        {
            DayCosts = new HashSet<DayCost>();
            FsSuppliers = new HashSet<FsSupplier>();
            Invoices = new HashSet<Invoice>();
            PurchaseOrders = new HashSet<PurchaseOrder>();
            Resources = new HashSet<Resource>();
            SiteDiaryCosts = new HashSet<SiteDiaryCost>();
            SupplierDivisions = new HashSet<SupplierDivision>();
            SupplierLinks = new HashSet<SupplierLink>();
            InitializePartial();
        }

        partial void InitializePartial();
    }

}
// </auto-generated>

