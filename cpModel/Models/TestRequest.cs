// <auto-generated>
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using cpModel.Interfaces;
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Threading;
using System.Threading.Tasks;

namespace cpModel.Models
{
    public partial class TestRequest: ITrackableEntity, IReplicableEntity, ILockableEntity
    {
        public Guid? UniqueId { get; set; }
        public string HrId { get; set; }
        public int? CreatedBy { get; set; }
        public DateTime? CreatedOn { get; set; }
        public int? ModifiedBy { get; set; }
        public DateTime? ModifiedOn { get; set; }
        public bool? IsSoftDeleted { get; set; }
        public int TestRequestId { get; set; }
        public int? TestRequestNo { get; set; }
        public string Description { get; set; }
        public int? ProjectId { get; set; }
        public int? RequestedById { get; set; }
        public int? LotId { get; set; }
        public int? TestRequestToId { get; set; }
        public DateTime? DateRequest { get; set; }
        public DateTime? DateRequired { get; set; }
        public string Source { get; set; }
        public decimal? DepthToTest { get; set; }
        public bool? IsAdvLocnDef { get; set; }
        public int? ControlLineId { get; set; }
        public decimal? ChStart { get; set; }
        public decimal? ChEnd { get; set; }
        public decimal? StLeftOs { get; set; }
        public decimal? StRightOs { get; set; }
        public decimal? EndLeftOs { get; set; }
        public decimal? EndRightOs { get; set; }
        public string LevelDatum { get; set; }
        public int? LocateMethod { get; set; }
        public string Notes { get; set; }
        public bool? IsAvlOverride { get; set; }
        public decimal? TestLength { get; set; }
        public decimal? TestArea { get; set; }
        public decimal? TestVolume { get; set; }
        public DateTime? TimeReqd { get; set; }
        public int? GeometryType { get; set; }
        public int? TestType { get; set; }
        public DateTime? DateTestCompleted { get; set; }
        public int? ReferenceSystemTypeId { get; set; }
        public int? TestResultStatus { get; set; }
        public string TestRequestNumSuffix { get; set; }
        public int? TestRequestClassId { get; set; }
        public int? Priority { get; set; }

        [ConcurrencyCheck]
        public int? OptimisticLockField { get; set; }

        // Reverse navigation
        public virtual ICollection<FsTestReq> FsTestReqs { get; set; }
        public virtual ICollection<TestCoordinate> TestCoordinates { get; set; }
        public virtual ICollection<TestReqCustomRegItem> TestReqCustomRegItems { get; set; }
        public virtual ICollection<TestReqEmail> TestReqEmails { get; set; }
        public virtual ICollection<TestRequestProperty> TestRequestProperties { get; set; }
        public virtual ICollection<TestRequestStatu> TestRequestStatus { get; set; }
        public virtual ICollection<TestRequestTest> TestRequestTests { get; set; }

        public virtual ControlLine ControlLine { get; set; }
        public virtual Lot Lot { get; set; }
        public virtual Project Project { get; set; }
        public virtual User RequestedBy { get; set; }
        public virtual User TestRequestTo { get; set; }

        public TestRequest()
        {
            FsTestReqs = new HashSet<FsTestReq>();
            TestCoordinates = new HashSet<TestCoordinate>();
            TestReqCustomRegItems = new HashSet<TestReqCustomRegItem>();
            TestReqEmails = new HashSet<TestReqEmail>();
            TestRequestProperties = new HashSet<TestRequestProperty>();
            TestRequestStatus = new HashSet<TestRequestStatu>();
            TestRequestTests = new HashSet<TestRequestTest>();
            InitializePartial();
        }

        partial void InitializePartial();
    }

}
// </auto-generated>

