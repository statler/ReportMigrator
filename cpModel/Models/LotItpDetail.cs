// <auto-generated>
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using cpModel.Interfaces;
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Threading;
using System.Threading.Tasks;

namespace cpModel.Models
{
    public partial class LotItpDetail: ITrackableEntity, IReplicableEntity, ILockableEntity
    {
        public Guid? UniqueId { get; set; }
        public string HrId { get; set; }
        public int? CreatedBy { get; set; }
        public DateTime? CreatedOn { get; set; }
        public int? ModifiedBy { get; set; }
        public DateTime? ModifiedOn { get; set; }
        public bool? IsSoftDeleted { get; set; }
        public int LotItpDetailId { get; set; }
        public decimal? OrderId { get; set; }
        public int? LotItpId { get; set; }
        public int? ItpDetailId { get; set; }
        public string ItemNumberText { get; set; }
        public string ReferenceText { get; set; }
        public string Description { get; set; }
        public int? Hpwpc { get; set; }
        public int? ItemType { get; set; }
        public DateTime? CheckDate { get; set; }
        public int? CheckedById { get; set; }
        public bool? CheckReqd { get; set; }
        public bool? CheckStatus { get; set; }
        public int? VerifyById { get; set; }
        public DateTime? VerifyDate { get; set; }
        public bool? VerifyReqd { get; set; }
        public bool? VerifyStatus { get; set; }
        public bool? ApprovalReqd { get; set; }
        public DateTime? ApproveDate { get; set; }
        public int? ApprovedById { get; set; }
        public bool? ApproveStatus { get; set; }
        public int? ApprovalLotId { get; set; }
        public int? ApprovalAtpId { get; set; }
        public int? NcrId { get; set; }
        public string ApprovalReason { get; set; }
        public string Comment { get; set; }
        public string Clause { get; set; }
        public string Records { get; set; }
        public string Responsibility { get; set; }
        public string InspMethod { get; set; }
        public int? ApprovalId { get; set; }
        public DateTime? NotApplicableDate { get; set; }
        public int? NotApplicableById { get; set; }
        public bool? IsApprovedManually { get; set; }
        public bool? IsApprovedStanding { get; set; }

        [ConcurrencyCheck]
        public int? OptimisticLockField { get; set; }

        // Reverse navigation
        public virtual ICollection<Approval> Approvals { get; set; }
        public virtual ICollection<ApprovalLotItpDetail> ApprovalLotItpDetails { get; set; }
        public virtual ICollection<LotItpTest> LotItpTests { get; set; }
        public virtual ICollection<PhotoChecklistItem> PhotoChecklistItems { get; set; }

        public virtual Approval Approval { get; set; }
        public virtual Atp ApprovalAtp { get; set; }
        public virtual Lot ApprovalLot { get; set; }
        public virtual LotItp LotItp { get; set; }
        public virtual Ncr Ncr { get; set; }
        public virtual User ApprovedBy { get; set; }
        public virtual User CheckedBy { get; set; }
        public virtual User NotApplicableBy { get; set; }
        public virtual User VerifyBy { get; set; }

        public LotItpDetail()
        {
            Approvals = new HashSet<Approval>();
            ApprovalLotItpDetails = new HashSet<ApprovalLotItpDetail>();
            LotItpTests = new HashSet<LotItpTest>();
            PhotoChecklistItems = new HashSet<PhotoChecklistItem>();
            InitializePartial();
        }

        partial void InitializePartial();
    }

}
// </auto-generated>

