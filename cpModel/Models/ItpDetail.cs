// <auto-generated>
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using cpModel.Interfaces;
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Threading;
using System.Threading.Tasks;

namespace cpModel.Models
{
    public partial class ItpDetail: ITrackableEntity, IReplicableEntity, ILockableEntity
    {
        public Guid? UniqueId { get; set; }
        public string HrId { get; set; }
        public int? CreatedBy { get; set; }
        public DateTime? CreatedOn { get; set; }
        public int? ModifiedBy { get; set; }
        public DateTime? ModifiedOn { get; set; }
        public bool? IsSoftDeleted { get; set; }
        public int ItpDetailId { get; set; }
        public int? ItpId { get; set; }
        public decimal? ItemOrder { get; set; }
        public string ReferenceText { get; set; }
        public string Description { get; set; }
        public string AltQvcText { get; set; }
        public int? ItemType { get; set; }
        public int? Hpwpc { get; set; }
        public string Clause { get; set; }
        public bool? InspectRequired { get; set; }
        public bool? AuthorityRequired { get; set; }
        public bool? VerifyRequired { get; set; }
        public string InspMeth { get; set; }
        public string Records { get; set; }
        public string Responsibility { get; set; }
        public bool? ItpInc { get; set; }
        public bool? QvcInc { get; set; }
        public string QvcItemNumberText { get; set; }

        [ConcurrencyCheck]
        public int? OptimisticLockField { get; set; }

        // Reverse navigation
        public virtual ICollection<ApprovalItpDetail> ApprovalItpDetails { get; set; }
        public virtual ICollection<ItpDetailWorkflow> ItpDetailWorkflows { get; set; }
        public virtual ICollection<ItpTesting> ItpTestings { get; set; }

        public virtual Itp Itp { get; set; }

        public ItpDetail()
        {
            ApprovalItpDetails = new HashSet<ApprovalItpDetail>();
            ItpDetailWorkflows = new HashSet<ItpDetailWorkflow>();
            ItpTestings = new HashSet<ItpTesting>();
            InitializePartial();
        }

        partial void InitializePartial();
    }

}
// </auto-generated>

