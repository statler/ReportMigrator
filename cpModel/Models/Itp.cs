// <auto-generated>
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using cpModel.Interfaces;
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Threading;
using System.Threading.Tasks;

namespace cpModel.Models
{
    public partial class Itp: ITrackableEntity, IReplicableEntity, ILockableEntity
    {
        public Guid? UniqueId { get; set; }
        public string HrId { get; set; }
        public int? CreatedBy { get; set; }
        public DateTime? CreatedOn { get; set; }
        public int? ModifiedBy { get; set; }
        public DateTime? ModifiedOn { get; set; }
        public bool? IsSoftDeleted { get; set; }
        public int ItpId { get; set; }
        public string Description { get; set; }
        public int? ProjectId { get; set; }
        public string QvcDocnumber { get; set; }
        public string ItpDocnumber { get; set; }
        public int? PersonControlId { get; set; }
        public DateTime? RevisionDate { get; set; }
        public int? RevisionId { get; set; }
        public string SpecRef { get; set; }
        public DateTime? ApprovalDate { get; set; }
        public int? ApprovedById { get; set; }
        public string ApprovalComment { get; set; }
        public int? BaseItpId { get; set; }
        public string RevisionData { get; set; }
        public DateTime? DateRevision { get; set; }
        public int? RevisionById { get; set; }
        public string RevisionRef { get; set; }
        public DateTime? DateActive { get; set; }

        [ConcurrencyCheck]
        public int? OptimisticLockField { get; set; }

        // Reverse navigation
        public virtual ICollection<CnItp> CnItps { get; set; }
        public virtual ICollection<FsItp> FsItps { get; set; }
        public virtual ICollection<Itp> ItpRevisions { get; set; }
        public virtual ICollection<ItpDetail> ItpDetails { get; set; }
        public virtual ICollection<ItpScheduleItem> ItpScheduleItems { get; set; }
        public virtual ICollection<LotItp> LotItps { get; set; }

        public virtual Itp BaseItp { get; set; }
        public virtual Project Project { get; set; }
        public virtual User ApprovedBy { get; set; }
        public virtual User PersonControl { get; set; }
        public virtual User RevisionBy { get; set; }

        public Itp()
        {
            CnItps = new HashSet<CnItp>();
            FsItps = new HashSet<FsItp>();
            ItpRevisions = new HashSet<Itp>();
            ItpDetails = new HashSet<ItpDetail>();
            ItpScheduleItems = new HashSet<ItpScheduleItem>();
            LotItps = new HashSet<LotItp>();
            InitializePartial();
        }

        partial void InitializePartial();
    }

}
// </auto-generated>

